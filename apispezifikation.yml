openapi: 3.0.3
info:
  title: To-Do-Listen Webserver
  description: |- 
    Die API ermöglicht das Anlegen und Verwalten von To-Do-Listen und Einträgen auf einem lokalen Webserver.
  version: '1.0'
servers:
  - url: http://localhost:5000

tags:
  - name: /todo-list/{list_id}
    description: Ermöglicht das verwalten von gesamten To-Do-Listen
  - name: /todo-list
    description: Ermöglicht das Anzeigen aller und Erstellen neuer To-Do-Listen
  - name: /todo-list/{list_id}/entry
    description: Ermöglicht das Hinzufügen eines neuen Eintrags zu einer bestehenden Liste
  - name: /entry/{entry_id}
    description: Ermöglicht das Aktualisierun und löschen eines Eintrags 

paths:
  /todo-list/{list_id}:
    get:
      tags:
        - /todo-list/{list_id}
      description: Liefert alle Einträge einer To-Do-Liste zurück.
      responses:
        200:
          "$ref": "#/components/responses/arrayoftodoentries"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
      parameters:
        - "$ref": "#/components/parameters/listid"
    delete:
      tags:
      - /todo-list/{list_id}
      description: Löscht eine vorhandene To-Do-Liste
      responses:
        200:
          "$ref": "#/components/responses/200"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      parameters:
        - "$ref": "#/components/parameters/listid"
    patch:
      tags:
      - /todo-list/{list_id}
      description: Aktualisiert den Namen einer bestehenden Todo-Liste
      responses:
        200:
          "$ref": "#/components/responses/singletodolist"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      parameters:
        - "$ref": "#/components/parameters/listid"
      requestBody: 
        "$ref": "#/components/requestBodies/listbody"

  /todo-list:
    get:
      tags:
        - /todo-list
      description: Liefert eine Liste aller Todo-Listen zurück
      responses:
        200:
          "$ref": "#/components/responses/arrayoftodolists"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      
    
    post:
      tags:
        - /todo-list
      description: Legt eine neue Todo-Liste an
      responses:
        200:
          "$ref": "#/components/responses/singletodolist"
        403:
          "$ref": "#/components/responses/403message"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      requestBody: 
        "$ref": "#/components/requestBodies/entrybody"
    
  /todo-list/{list_id}/entry:
    post:
      tags:
        - /todo-list/{list_id}/entry
      description: Fügt einen Eintrag zu einer bestehenden Todo-Liste hinzu.
      responses:
        200:
          "$ref": "#/components/responses/singletodoentry"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      parameters:
        - "$ref": "#/components/parameters/listid"
      requestBody: 
        "$ref": "#/components/requestBodies/entrybody"
    
  /entry/{entry_id}:
    patch:
      tags: 
        - /entry/{entry_id}
      description: Aktualisiert einen bestehenden Eintrag.
      responses:
        200:
          "$ref": "#/components/responses/200"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      parameters:
        - "$ref": "#/components/parameters/entryid"
      requestBody: 
        "$ref": "#/components/requestBodies/entrybody"

    delete:
      tags: 
        - /entry/{entry_id}
      description: Löscht einen einzelnen Eintrag einer Todo-Liste.
      responses:
        200:
          "$ref": "#/components/responses/deletedentry"
        404:
          "$ref": "#/components/responses/404message"
        405:
          "$ref": "#/components/responses/405message"
        500:
          "$ref": "#/components/responses/500message"
      parameters:
        - "$ref": "#/components/parameters/entryid"
        
components:

  parameters:
    listid:
      name: list_id
      in: path
      schema:
        "$ref": "#/components/schemas/uuid"
      required: true
      
    entryid:
      name: entry_id
      in: path
      schema:
        "$ref": "#/components/schemas/uuid"
      required: true

  requestBodies:
    listbody:
      description: Enthält den Namen der Liste.
      content:
        application/json:
          schema: 
            type: object
            properties:
              name:
                "$ref": "#/components/schemas/name"
                required: true
      
    entrybody:
      description: Enthält den Namen des Eintrags.
      content:
        application/json:
          schema: 
            type: object
            properties:
              name:
                "$ref": "#/components/schemas/name"
                required: true

  schemas:

    uuid:
      type: string
      description: Eine eindeutige Nummer zum Identifizieren eines Items
      example: d665842a-482f-4a7c-b9a2-65b649be7543

    name:
      type: string
      description: Name eines Items
      example: TollerName1

    to-do-list-item:
      type: object
      properties:
        id:
          type: string
          description: A unique UUID
          example: "88b8ee7e-1390-4d96-87f6-d7863b50f490"
        name: 
          type: string
          description: The name of the list
          example: "MeineTolleListe1"
    
    to-do-entry-item:
      type: object
      properties:
        name:
          type: string
          description: The name of the entry
          example: "MeinTollerEintrag1"
        description:
          type: string
          description: "The description of the entry"
          example: "Dicke Wassermelonen"
        id:
          type: string
          description: A unique UUID
          example: "861aaf49-8022-4337-852f-5137eb35a79a"
        list_id:
          type: string
          description: A UUID of a list to reference to it
          example: "88b8ee7e-1390-4d96-87f6-d7863b50f490"

  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: ""
                example: Operation successful

    arrayoftodolists:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/to-do-list-item"

    arrayoftodoentries:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/to-do-entry-item"

    403message:
      description: NO NAME SPECIFIED
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: ""
                example: No name was specified
    404message:
      description: NOT FOUND
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: ""
                example: UUID not found
    
    405message:
      description: Method not allowed

    500message:
      description: ERROR WHILE WRITING
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: ""
                example: Crticial error while writing

    singletodolist:
      description: OK
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/to-do-list-item"

    singletodoentry:
      description: OK
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/to-do-entry-item"

    deletedentry:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              deleted:
                type: string
                description: ""
                example: "True"